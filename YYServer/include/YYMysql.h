#pragma once
#ifndef YYMSQL_H_
#define YYMSQL_H_

#include <vector>
#include <string>
#include "YYDATA.h"
#include <mysql/mysql.h>
#ifdef _WIN32
#include <windows.h>
#else
#include <iconv.h>
#endif


//???§Ö?????????????????

namespace YY{
class  YYMysql //???????lib
{
public:
	//?????
	bool Init();
	
	//???????
	void Close();
	//???????????????????????,flag?????????????
	bool Connect(const char *host, const char* user, const char* passwd, const char* db,unsigned short port=3306,unsigned long flag=0);
	
	//???sql??? 
	bool Query(const char*sql,unsigned long sqllen);
	bool Query(const char* sql);

	//Mysql?????Ú… connect??????
	//??????????Ú…
	bool SetConnectTimeout(int sec);
	//???????Ú…
	bool SetReconnect(bool is=true);


	//?????????
	bool StoreResult();
	bool UseResult();
	//???????
	void FreeResult();



	//??????????
	std::vector<YYDATA> FetchRow();

	std::string get_error()
	{
		std::string err;
		err = mysql_error(mysql);
		return err;
	}
	//?????????????
	//????????
	//????insert???,??????????@??????????????
	std::string GetInsetSql(YDATA &kv,std::string &table);


	//??????????????
	bool Insert(YDATA &kv, std::string table);


	//?????????????
	bool InsertBin(YDATA& kv, std::string table);


	//Update
	std::string GeyUpdateSql(YDATA& kv, std::string& table, std::string &where);
	//???????????????????-1   ???????????
	int Update(YDATA& kv, std::string table, std::string where);
	//?????????????
	int UpdateBin(YDATA& kv, std::string table, std::string where);



	//??????
	//???
	bool StartTransaction();
	//????
	bool StopTransaction();
	//commit
	bool Commit();
	//???
	bool Rollback();

	//????????
#ifndef _WIN32
	 size_t Convert(char* from_cha, char* to_cha, char* in, size_t inlen, char* out, size_t outlen);
#endif

	std::string GBKToUTF8(const char* data);
	std::string UTF8ToGBK(const char* data);

	//??????,????select????????????¦Å???????????¦Å?????
	YYROWS GetResult(const char* sql);

protected:
	MYSQL* mysql = nullptr;
	MYSQL_RES* res = nullptr;
};
}




#endif // !YYMSQL_H_

